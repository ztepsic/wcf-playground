<?xml version="1.0"?>
<configuration>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>

  <system.serviceModel>
    <services>
      <service name="WcfRestExample.Services.RestService" behaviorConfiguration="RestServiceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8000/rest-services"/>
          </baseAddresses>
        </host>


        <!-- 
          BINDING: to enable REST through WCF use webHttpBinding 
          binding determines how WCF is going to communicate, how to build what is known as the channel stack, which is the set of objects that will work together to provide the type of communication you want for a particular endpoint. 
          Unlike many other bindings, WebHttpBinding is fairly simple, containing only two components: the HTTP transport and the text message encoder.
        -->
        <!--
          BEHAVIOR:
          WebHttpBehavior is the object that causes the URI-plus-verb dispatcher to be used.
          By default, WCF does this routing (also known as dispatching) based on the concept of action. For this dispatching to work, an action needs to be present in every message that WCF receives on your behalf. 
          When you use the REST infrastructure with WCF, the default dispatcher is replaced by one that routes based not on Action, but instead based on the URI of the incoming request and the HTTP verb being used. This routing (done by a class called WebHttpDispatchOperationSelector) enables you to easily implement a RESTful endpoint. This dispatcher is configured on each endpoint by a behavior named WebHttpBehavior, which must be added to each endpoint from which you want to use this programming model (though you don't often have to do this manually, as you'll see later).
          The key to making this work is for the WebHttpDispatch­OperationSelector to know how to map different URIs and verbs to your methods. For this, the WebGetAttribute and WebInvokeAttribute must be added to the methods on your WCF ServiceContract type.
        -->
        <endpoint address="rest-srv-endpoint" name="restEndpoint" contract="WcfRestExample.Services.IRestService" binding="webHttpBinding" behaviorConfiguration="RestBehavior"/>


        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior name="RestServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <!-- to enable metadata exchange -->
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="RestBehavior">
          <webHttp helpEnabled="true"/>
          <!-- helpEnabled= true => add help to the end of endpoint url e.g. http://localhost:8000/rest-services/rest-srv-endpoint/help -->
        </behavior>
      </endpointBehaviors>
    </behaviors>

  </system.serviceModel>

</configuration>
